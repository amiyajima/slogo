package backEnd;

import java.util.Observable;
import java.util.Queue;
import javafx.geometry.Point2D;
import commands.Command;

/**
 * A turtle object that executes the queue of turtle commands generated by the
 * script manager. The turtle also keeps track of its location, orientation, and
 * pen up/down.
 * 
 * @author Brian Bolze
 * @author Ethan Chang
 * @author Eli Lichtenberg
 * @author Anna Miyajima
 * 
 */
public class Turtle extends Observable {
    private Point2D myPosition;
    /**
     * Create a new turtle object
     */
    public Turtle (Point2D initialPoint) {
        myPosition = initialPoint;
    }

    /**
     * Called by the model to execute a list of turtle commands that may or may
     * not alter the View. A lot of the data in Turtle will be observable by the
     * view, so when it changes the view will update the GUI accordingly via its
     * update(Observable o, Object arg) method
     * 
     * @param commands
     *            Most likely a stack of executable Turtle Commands
     */
    public void executeCommands (Queue<Command> commands) {
        return;
    }
    
    public Point2D getTurtlePosition() {
        return myPosition;
    }
}
